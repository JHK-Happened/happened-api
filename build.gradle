plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5' // Spring Boot 최신 버전 확인
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.happened'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = '17' // Java 17 버전 지정
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// 필수 의존성 목록
dependencies {
    // Spring Web: REST API 개발을 위한 필수 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Security: 보안 및 인증/인가 처리를 위한 프레임워크
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // OAuth2 Client: 구글, 애플 등 소셜 로그인을 쉽게 구현하도록 도와줌
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    // Spring Data JPA: 데이터베이스 연동을 위한 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // JWT 라이브러리: 소셜 로그인 성공 후, 자체 토큰 발급을 위해 필요
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // Google API
    implementation 'com.google.api-client:google-api-client:2.2.0'

    // H2 Database: 개발/테스트용 인메모리 데이터베이스 (비용 절감에 유리)
    // 나중에 AWS RDS (PostgreSQL, MySQL 등)로 쉽게 교체 가능
    runtimeOnly 'com.h2database:h2'

    // Lombok: @Getter, @Setter 등 반복적인 코드를 줄여주는 유용한 라이브러리
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test: 테스트 코드 작성을 위한 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}